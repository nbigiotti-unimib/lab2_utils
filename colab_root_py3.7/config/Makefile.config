# -*- mode: makefile -*-
#
# Makefile definitions included by the top Makefile

# The macro below is expanded when 'realpath' is not built-in.
# Built-in 'realpath' is available on GNU Make 3.81.
realpath = $(shell cd $(1); pwd)

ROOT_SRCDIR    := $(call realpath, /home/nicobigio01/colab_root/root_src)
ROOT_OBJDIR    := $(call realpath, /home/nicobigio01/colab_root/root_build)

ifndef ROOT_SRCDIR
$(error Error determining ROOT_SRCDIR)
endif
ifndef ROOT_OBJDIR
$(error Error determining ROOT_OBJDIR)
endif

# The macro below strips off the source dir path to make a relative path name
stripsrc = $(subst $(ROOT_SRCDIR)/,,$(1))

# This macro creates the list of pcm files to be passed to a library
# dictionary generation step, something like
#    $(call pcm_rootcling_opt,$(TREELIBDEPM))
pcm_rootcling_opt = -m lib/libCore_rdict.pcm $(addprefix -m ,$(subst $(SOEXT),_rdict.pcm,$1))

# This macro returns the name of the pcm corresponding to a library
#    $(call pcmname,$(TREELIB))
pcmname = $(subst .$(SOEXT),_rdict.pcm,$1)

# This macro returns the list of pcm's that are needed for a package
#    $(call pcmdep,TREE)
# the argument is the upper case name of the library (see the Module.mk)
pcmdep = lib/libCore_rdict.pcm $(subst .$(SOEXT),_rdict.pcm,$($1LIBDEPM))

# This macro builds the rootmap name starting from the library full path
#    $(call rmfName, TREELIB)
# the argument is the upper case name of the library (see the Module.mk)
rmfName = $(dir $1)$(subst .$(SOEXT),.rootmap,$(notdir $1))

# This macro returns the arguments to be passed to rootcling to properly
# generate the rootmap file
#    $(call rootmapModule, TREELIB)
# the argument is the upper case name of the library (see the Module.mk)
rootmapModule = -rml $(notdir $1) -rmf $(call rmfName, $1)

# This macro returns the argument to be passed to rootcling to
# properly setup the pcm
#    $(call dictModule,TREE)
# the argument is the upper case name of the library (see the Module.mk)
dictModule = -s $($1LIB) $(call rootmapModule, $($1LIB)) $(call pcm_rootcling_opt, $($1LIBDEPM))

# This macro is used to setup the rule where the pcm depends on the
# dictionary and the library's dependent pcm's
#    $(call pcmrule,TREE)
# the argument is the upper case name of the library (see the Module.mk)
pcmrule = $(call pcmname, $($1LIB)): $(call pcmdep, $1) $($1DS)

noop = @true # "Do nothing really, this is just to make the rule stick"

ARCH           := linuxx8664gcc
HOST           := 

USECONFIG      := FALSE
MKLIBOPTIONS   := -v 6 26 00 

EXTRA_CFLAGS   := -Iinclude  -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe  -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread
USERCONF_CFLAGS:= 
EXTRA_CXXFLAGS := -Iinclude  -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe  -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread
USERCONF_CXXFLAGS:= 
EXTRA_LDFLAGS  := 
WERROR         := 
WINRTDEBUG     := no
CTORSINITARRAY := 
CXXMKDEPFLAGS  := 

BINDIR         := $(ROOTSYS)/bin
LIBDIR         := $(ROOTSYS)/lib
INCDIR         := $(ROOTSYS)/include
ETCDIR         := $(ROOTSYS)/etc
MANDIR         := $(ROOTSYS)/man
DATADIR        := $(ROOTSYS)/.
ELISPDIR       := $(ROOTSYS)/emacs/site-lisp
TTFFONTDIR     := $(ROOTSYS)/fonts
MACRODIR       := $(ROOTSYS)/macros
SRCDIR         := $(ROOTSYS)/src
ICONPATH       := $(ROOTSYS)/icons
DOCDIR         := $(ROOTSYS)/.
TUTDIR         := $(ROOTSYS)/tutorials

BUILDX11       := yes
X11INCDIR      := $(filter-out /usr/include, )
X11LIBDIR      := -L/usr/lib/x86_64-linux-gnu
XPMLIBDIR      := -L/usr/lib/x86_64-linux-gnu
XPMLIB         := /usr/lib/x86_64-linux-gnu/libXpm.so

BUILDCOCOA     := 
MACOSXVERS     := 
OSXSDK         := 
IOSVERS        := 
IOSSDK         := 

CXX11          := 
CXX14          := 
CXXMODULES     := OFF
LIBCXX         := 

ENABLETHREAD   := yes
OSTHREADFLAG   := -pthread
OSTHREADLIBDIR := 
OSTHREADLIB    := -lpthread

BUILTINFREETYPE:= no

BUILTINPCRE    := no

BUILTINUNURAN  := no
UNURANLIBDIR   := 
UNURANLIBEXT   := 
UNURANLIB      := 
UNURANINCDIR   := $(filter-out /usr/include, )

BUILTINZLIB    := no
ZLIBLIBDIR     := 
ZLIBCLILIB     := /usr/lib/x86_64-linux-gnu/libz.so
ZLIBINCDIR     := $(filter-out /usr/include, /usr/include)

BUILTINLZMA    := 
LZMALIBDIR     := 
LZMACLILIB     := 
LZMAINCDIR     := $(filter-out /usr/include, )

BUILTINLZ4     := 
LZ4LIBDIR      := 
LZ4CLILIB      := 
LZ4INCDIR      := $(filter-out /usr/include, )

BUILDGL        := yes
OPENGLLIBDIR   := 
OPENGLULIB     := /usr/lib/x86_64-linux-gnu/libGLU.so
OPENGLLIB      := 
OPENGLINCDIR   := $(filter-out /usr/include, /usr/include)

BUILTINGL2PS   := yes
GL2PSLIBDIR    := 
GL2PSLIB       := GL2PS_LIBRARY-NOTFOUND
GL2PSINCDIR    := $(filter-out /usr/include, GL2PS_INCLUDE_DIR-NOTFOUND)

BUILDMYSQL     := yes
MYSQLLIBDIR    := 
MYSQLCLILIB    := 
MYSQLINCDIR    := $(filter-out /usr/include, /usr/include/mysql)

BUILDORACLE    := no
ORACLELIBDIR   := 
ORACLECLILIB   := ORACLE_LIBRARY_OCCI-NOTFOUND;ORACLE_LIBRARY_CLNTSH-NOTFOUND;ORACLE_LIBRARY_LNNZ-NOTFOUND
ORACLEINCDIR   := $(filter-out /usr/include, ORACLE_INCLUDE_DIR-NOTFOUND)

BUILDPGSQL     := no
PGSQLLIBDIR    := 
PGSQLCLILIB    := 
PGSQLINCDIR    := $(filter-out /usr/include, )

BUILDSQLITE     := no
SQLITELIBDIR    := 
SQLITECLILIB    := 
SQLITEINCDIR    := $(filter-out /usr/include, SQLITE_INCLUDE_DIR-NOTFOUND)

BUILDODBC      := no
ODBCLIBDIR     := 
ODBCCLILIB     := 
ODBCINCDIR     := $(filter-out /usr/include, )

BUILDDAVIX      := no
DAVIXLIBDIR     := 
DAVIXCLILIB     := 
DAVIXINCDIR     := $(filter-out /usr/include, )

BUILDDCAP      := 
DCAPLIBDIR     := 
DCAPLIB        := 
DCAPINCDIR     := $(filter-out /usr/include, )

BUILDFTGL      := no
FTGLLIBDIR     := 
FTGLLIBS       := /usr/lib/x86_64-linux-gnu/libftgl.so
FTGLINCDIR     := $(filter-out /usr/include, /usr/include)
ifeq ($(BUILDFTGL), yes)
FTGLCPPFLAGS   := -DBUILTIN_FTGL
endif

BUILDGLEW      := no
GLEWLIBDIR     := 
GLEWLIBS       := /usr/lib/x86_64-linux-gnu/libGLEW.so
GLEWINCDIR     := $(filter-out /usr/include, /usr/include)
ifeq ($(BUILDGLEW), yes)
GLEWCPPFLAGS   := -DBUILTIN_GLEW
endif

BUILDGFAL      := no
GFALLIBDIR     := 
GFALCLILIB     := GFAL_LIBRARY-NOTFOUND
GFALINCDIR     := $(filter-out /usr/include, GFAL_INCLUDE_DIR-NOTFOUND)
SRMIFCEINCDIR  := $(filter-out /usr/include, )
GLIB2INCDIR    := $(filter-out /usr/include, )

BUILDALIEN     := no
ALIENLIBDIR    := 
ALIENCLILIB    := 
ALIENINCDIR    := $(filter-out /usr/include, )

BUILDASIMAGE   := yes
BUILTINASIMAGE := ON
ASEXTRALIB     := /usr/lib/x86_64-linux-gnu/libpng.so;/usr/lib/x86_64-linux-gnu/libz.so
ASEXTRALIBDIR  := 
ASJPEGINCDIR   := $(filter-out /usr/include, JPEG_INCLUDE_DIR-NOTFOUND)
ASPNGINCDIR    := $(filter-out /usr/include, /usr/include)
ASTIFFINCDIR   := $(filter-out /usr/include, TIFF_INCLUDE_DIR-NOTFOUND)
ASINCDIR       := $(filter-out /usr/include, )
ASLIB          := 
ASLIBDIR       := 

BUILDFPYTHIA6    := no
FPYTHIA6LIBDIR   := 
FPYTHIA6LIB      := PYTHIA6_LIBRARY-NOTFOUND
FPYTHIA6CPPFLAGS := 

BUILDFPYTHIA8    := no
FPYTHIA8INCDIR   := $(filter-out /usr/include, )
FPYTHIA8LIBDIR   := 
FPYTHIA8LIB      := PYTHIA8_LIBRARY-NOTFOUND

BUILDFFTW3     := yes
FFTW3LIBDIR    := 
FFTW3LIB       := 
FFTW3INCDIR    := $(filter-out /usr/include, )

BUILDFITSIO    := yes
CFITSIOLIBDIR  := 
CFITSIOLIB     := 
CFITSIOINCDIR  := $(filter-out /usr/include, )

BUILDGVIZ      := no
GRAPHVIZLIBDIR := 
GRAPHVIZLIB    := 
GRAPHVIZINCDIR := $(filter-out /usr/include, )
GRAPHVIZCFLAGS := 

BUILDPYTHON    := yes
PYTHONLIBDIR   := /usr/lib/x86_64-linux-gnu
PYTHONLIB      := /usr/lib/x86_64-linux-gnu/libpython3.7m.so
PYTHONINCDIR   := $(filter-out /usr/include, /usr/include/python3.7m)
PYTHONLIBFLAGS := 
PYTHONEXE      := 

BUILDRUBY      := 
RUBYLIBDIR     := 
RUBYLIB        := 
RUBYINCDIR     := $(filter-out /usr/include, )

BUILDXML       := yes
XMLLIBDIR      := 
XMLCLILIB      := /usr/lib/x86_64-linux-gnu/libxml2.so
XMLINCDIR      := $(filter-out /usr/include, /usr/include/libxml2)

HASXRD         := 
XRDINCDIR      := 
XRDLIBDIR      := 
EXTRA_XRDFLAGS := 
XRDVERSION     := 
HASXRDUTILS    := 
XRDINCPRIVATE  := 
BUILDNETXNG    := yes
BUILDXPROOFD   := 
BUILDXRDCLT    := 

ALLOCLIB       := 
ALLOCLIBDIR    := 

BUILDMONALISA  := no
MONALISALIBDIR := 
MONALISACLILIB := 
MONALISAINCDIR := $(filter-out /usr/include, )

BUILDTBB       := 
TBBLIBDIR      := 
TBBLIB         := 
TBBINCDIR      := $(filter-out /usr/include, )

SSLLIB         := /usr/lib/x86_64-linux-gnu/libssl.so;/usr/lib/x86_64-linux-gnu/libcrypto.so
SSLLIBDIR      := 
SSLINCDIR      := $(filter-out /usr/include, /usr/include)
SSLSHARED      := 

BUILTINLZMA    := 
LZMALIBDIR     := 
LZMACLILIB     := 
LZMAINCDIR     := $(filter-out /usr/include, )

SHADOWFLAGS    := no
SHADOWLIB      :=
SHADOWLIBDIR   :=

BUILDMATHMORE  := yes
GSLFLAGS       := $(filter-out -I/usr/include, )
GSLLIBDIR      := 
GSLLIBS        := /usr/lib/x86_64-linux-gnu/libgsl.so;/usr/lib/x86_64-linux-gnu/libgslcblas.so
GSLVERSION     := 

BUILTINLLVM    := 
LLVMCONFIG     := 

BUILDROOFIT    := yes

BUILDMINUIT2   := yes

BUILDUNURAN    := no

BUILDVC        := 
BUILDVDT       := 
AVXCXXFLAG     := 
SIMDCXXFLAGS   :=  
VCFLAGS        :=  

BUILDGDML      := yes

BUILDTABLE     := 

BUILDTMVA      := yes

BUILDHTTP      := yes
USEFASTCGI     := no
FASTCGIINCDIR  := 
ifeq ($(USEFASTCGI), no)
FASTCGIFLAGS   := -DHTTP_WITHOUT_FASTCGI
endif

CPPUNIT        := 
GCCXML         := 

INSTALL        := cp -dpR
INSTALLDATA    := cp -dpR
INSTALLDIR     := mkdir -p
RSYNC          := rsync -au

BUILDR         := 
RLIBS          := 
RFLAGS         := 

ROOTDRPMREL    := 1
